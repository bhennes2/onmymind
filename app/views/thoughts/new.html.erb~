<h1>This just popped into my head...</h1>

<%= form_for(@thought) do |f| %>
  	<% if @thought.errors.any? %>
  	  <div id="error_explanation">
  	    <h2><%= pluralize(@thought.errors.count, "error") %> prohibited this thought from being saved:</h2>

  	    <ul>
  	    <% @thought.errors.full_messages.each do |msg| %>
  	      <li><%= msg %></li>
  	    <% end %>
  	    </ul>
  	  </div>
  	<% end %>

	<div class="field">
		<span>Remember to: </span>
		<%= f.text_field :idea, :autocomplete => false %><div id="counter"></div>
	</div>
	<div class="field">
		<span>I'll do this: </span>
		<%= f.select :timeframe, [" ", "Soon", "Someday", "By Date", "Every"] %><br />
		<%= f.text_field :timeframe_date, :style => "display: none;" %><br />
		<select style="display: none;" id="frequency" class="frequency">
			<option></option>
			<option>Daily</option>
			<option>Weekly</option>
			<option>Monthly</option>
			<option>Yearly</option>
		</select>
		<input id="frequency_date" class="frequency" style="display: none;" type="text"></input>
	</div>
	<div class="field">
		<span>Tag this to: </span>
		<%= f.text_field :tag, :autocomplete => false %><br />
	</div>
	<div class="field">
		<span>A litte note: </span>
		<%= f.check_box :note_image, :class => "checkbox" %>
		<%= f.check_box :note_link, :class => "checkbox" %>
		<%= f.check_box :note_location, :class => "checkbox" %>
		<%= f.check_box :note_email, :class => "checkbox" %>
		<%= f.check_box :note_text, :class => "checkbox" %>
	</div>
	<div id="note_content">
		<% if !(request.user_agent.include? "iphone" || "ipad") %>
			<%= f.text_field :image_content, :class => "note_content_field", :style => "display: none;" %>
		<% end %>
		<%= f.text_field :link_content, :class => "note_content_field", :style => "display: none;" %>
		<div id="location_information" style="display: none;" class="note_content_field">
			<%= f.text_field :location_content, :class => "note_content_field" %>
			<img id="locate_current" src="/assets/home.png" alt="Find current location" title="Find current location" />
			<img id="locate_list" src="/assets/more.png" alt="Find saved locations" title="Find saved locations" />
			<img id="locate_place" src="/assets/search.png" alt="Find a place" title="Find a place" /><br />
			<div id="locations" style="display: none;">
				<table>
					<tr>
						<th>ID</th>
						<th>Idea</th>
						<th>Tag</th>
						<th>Use this location?</th>
					</tr>
					<% @thoughts_location.each do |thought| %>
					<tr>
						<td><%= thought.id %></td>
						<td><%= thought.idea %></td>
						<td><%= thought.tag %></td>
						<td><a onclick="$('#thought_location_content').val('<%= thought.location_content %>')">Use it</a></td>
					</tr>
					<% end %>
				</table>
			</div><!-- locations -->
			<div id="map_area" style="display: none;">
				<input id="searchTextField" type="text" size="50">
				<input type="radio" name="type" id="changetype-all" checked="checked">
				<label for="changetype-all">All</label>

				<input type="radio" name="type" id="changetype-establishment">
				<label for="changetype-establishment">Establishments</label>

				<input type="radio" name="type" id="changetype-geocode">
				<label for="changetype-geocode">Geocodes</label>
				<div id="map_canvas" style="height: 400px; width: 600px; overflow: none;"></div>

			</div><!-- map-->
		</div><!-- location_information -->

		<%= f.text_area :email_content, :class => "note_content_field", :style => "display: none;" %>
		<%= f.text_area :text_content, :class => "note_content_field", :style => "display: none;" %>
	</div><!-- note_content -->
	<div class="field">
		<%= f.hidden_field :user_id, :value => current_user.id %>
		<%= f.hidden_field :complete, :value => false %>
	</div>


  <div class="actions">
    <%= f.submit :value => "Remember!" %>
  </div>
<% end %>

<%= link_to 'Back', thoughts_path %><br />
<%= link_to 'Home', root_url %>

<style>
	.checkbox {
		width: 40px;
		height: 38px;
		-webkit-appearance: none;
		margin: 0 8px 0 8px;
	}

	#thought_note_image { background: url('/assets/picture-off.png'); }
	#thought_note_image:checked { background: url('/assets/picture-on.png'); }
	#thought_note_location { background: url('/assets/location-off.png'); }
	#thought_note_location:checked { background: url('/assets/location-on.png'); }
	#thought_note_link { background: url('/assets/link-off.png'); }
	#thought_note_link:checked { background: url('/assets/link-on.png'); }
	#thought_note_email { background: url('/assets/email-off.png'); }
	#thought_note_email:checked { background: url('/assets/email-on.png'); }
	#thought_note_text { background: url('/assets/text-off.png'); }
	#thought_note_text:checked { background: url('/assets/text-on.png'); }
</style>


<script>
	$(function(){
		var max_length = 30;
		// get current number of characters
		$('#counter').html(max_length - $('#thought_idea').val().length);

		$('#thought_idea').keyup(function()
		{
			// get new length of characters
			if ($(this).val().length >= max_length)
			{
				$('#counter').html('You have reached the maximum limit of ' + max_length);
				$(this).val($(this).val().substr(0, max_length));
			}
			else
			{
				$('#counter').html(max_length - $(this).val().length);
			}
		});

		//Autocomplete idea and tag
		var available_ideas = [<% @thoughts.each do |thought| %>
						"<%= thought.idea %>"
						<% if thought != @thoughts.last %>,<% end %>
					<% end %>];
		var available_tags = [<% @thoughts.each do |thought| %>
						"<%= thought.tag %>"
						<% if thought != @thoughts.last %>,<% end %>
					<% end %>];
		$("#thought_idea").autocomplete({ source: available_ideas.unique() });
		$("#thought_tag").autocomplete({ source: available_tags.unique() });

	});

	$("#thought_note_image").click(function(){
		if ($("#thought_note_image:checked")){
			$(".note_content_field").hide();
			$("#thought_image_content").show().val('/assets/rails.png');
		}
		else {
			document.write("hello");
		}
	});

	$("#thought_note_link").change(function(){
		if ($("#thought_note_link:checked")){
			$(".note_content_field").hide();
			$("#thought_link_content").show().val(window.location).attr('rows', 1);
		}
	});

	$("#thought_note_location").change(function(){
		if ($("#thought_note_location:checked")){
			$(".note_content_field").hide();
			$("#location_information").show();
			$("#thought_location_content").show();
		}
	});

	$("#locate_current").click(function(){
			function showMap(position) {
    	  		// Show a map centered at (position.coords.latitude, position.coords.longitude).
				$("#thought_location_content").val(position.coords.latitude+","+position.coords.longitude).attr('rows', 1);
			}

			// One-shot position request.
    			navigator.geolocation.getCurrentPosition(showMap);
	});
	$("#locate_list").click(function(){
			$("#locations").show();
	});


	$("#thought_note_email").change(function(){
		if ($("#thought_note_email:checked")){
			$(".note_content_field").hide();
			$("#thought_email_content").show().attr('rows', 5);
		}
	});


	$("#thought_note_text").change(function(){
		if ($("#thought_note_text:checked")){
			$(".note_content_field").hide();
			$("#thought_text_content").show().attr('rows', 5);
		}
	});

	$("#thought_timeframe").change(function(){
		if ($("#thought_timeframe option:selected").val() == "By Date")
		{	$("#thought_timeframe_date").show().datepicker({dateFormat: 'yy-dd-mm'}).focus();
		}
		if ($("#thought_timeframe option:selected").val() == "Every"){
			$("#frequency").show().focus();
			$("#frequency_date").show().datepicker({dateFormat: 'yy-dd-mm'});
			$("#thought_timeframe_date").show();
		}
		if ($("#thought_timeframe option:selected").val() == "Soon" || $("#thought_timeframe option:selected").val() == "Someday"){
			$("#thought_timeframe_date").hide();
		}
	});
	$(".frequency").change(function(){
		$("#thought_timeframe_date").val(function(index, value){
				return $("#frequency option:selected").val() + "," + $("#frequency_date").val();
			});
	});



	$("#thought_note_type").change(function(){
		if ($("#thought_note_type option:selected").val() == "Location")
		{	$("#note_content").slideDown();

			function showMap(position) {
    	  		// Show a map centered at (position.coords.latitude, position.coords.longitude).
				$("#thought_note_content").val(position.coords.latitude+","+position.coords.longitude).attr('rows', 1);
			}

			// One-shot position request.
    		navigator.geolocation.getCurrentPosition(showMap);
		}
		else if ($("#thought_note_type option:selected").val() == "Link")
		{
			$("#note_content").slideDown();
			$("#thought_note_content").val(window.location).attr('rows', 1);
		}
		else if ($("#thought_note_type option:selected").val() == "Text")
		{
			$("#note_content").slideDown();

			$("#thought_note_content").attr('rows', 5).val("");
		}

		else{
			$("#note_content").hide();
		}
	});

	//Return new array with duplicate values removed
	Array.prototype.unique =
	  function() {
	    var a = [];
	    var l = this.length;
	    for(var i=0; i<l; i++) {
	      for(var j=i+1; j<l; j++) {
		// If this[i] is found later in the array
		if (this[i] === this[j])
		  j = ++i;
	      }
	      a.push(this[i]);
	    }
	    return a;
	  };

	var map;
	var latitude;
	var longitude;

	$("#locate_place").click(function(){
		$('#map_area').show();
		google.maps.event.trigger(map, "resize");
		map.setCenter( new google.maps.LatLng(latitude, longitude) );
		map.setZoom(13);
	});

	function initialize(position) {
		latitude = position.coords.latitude;
		longitude = position.coords.longitude;
		var mapOptions = {
		  	center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
			zoom: 8,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

		google.maps.event.trigger(map, "resize");

		var input = document.getElementById('searchTextField');
		var autocomplete = new google.maps.places.Autocomplete(input);

		autocomplete.bindTo('bounds', map);

		var infowindow = new google.maps.InfoWindow();
		var marker = new google.maps.Marker({
		  map: map
		});

		google.maps.event.addListener(autocomplete, 'place_changed', function() {
		  infowindow.close();
		  var place = autocomplete.getPlace();

		  if (place.geometry.viewport) {
		    map.fitBounds(place.geometry.viewport);
		  }
		  else {
		    map.setCenter(place.geometry.location);
		    map.setZoom(17);  // Why 17? Because it looks good.
		  }

		  var image = new google.maps.MarkerImage(
		      place.icon,
		      new google.maps.Size(71, 71),
		      new google.maps.Point(0, 0),
		      new google.maps.Point(17, 34),
		      new google.maps.Size(35, 35));
		  marker.setIcon(image);
		  marker.setPosition(place.geometry.location);

		  var address = '';
		  if (place.address_components) {
		    address = [(place.address_components[0] &&
		                place.address_components[0].short_name || ''),
		               (place.address_components[1] &&
		                place.address_components[1].short_name || ''),
		               (place.address_components[2] &&
		                place.address_components[2].short_name || '')
		              ].join(' ');
		  }
		  var coordinates = String(place.geometry.location).replace("(","");
		  coordinates = coordinates.replace(")","");

		  infowindow.setContent('<div><strong><a onclick="$(\'#thought_location_content\').val(\''+coordinates+'\')">' + place.name + '</a></strong><br>' + address);
		  infowindow.open(map, marker);
		});

		// Sets a listener on a radio button to change the filter type on Places
		// Autocomplete.
		function setupClickListener(id, types) {
		  var radioButton = document.getElementById(id);
		  google.maps.event.addDomListener(radioButton, 'click', function() {
		    autocomplete.setTypes(types);
		  });
		}

		setupClickListener('changetype-all', []);
		setupClickListener('changetype-establishment', ['establishment']);
		setupClickListener('changetype-geocode', ['geocode']);

	      }

	navigator.geolocation.getCurrentPosition(initialize);


</script>
